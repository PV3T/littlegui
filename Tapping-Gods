local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
local Meta = getrawmetatable(game)
local NewIndex = Meta.__newindex
setreadonly(Meta, false)

Meta.__newindex = newcclosure(function(t, k, ...)
    
   if not checkcaller() and (k == "WalkSpeed" or k == "JumpPower") then
       return
   end
   NewIndex(t, k, ...)
end)
setreadonly(Meta, true)

local blur = Instance.new("BlurEffect", game.Lighting)
blur.Size = 0
local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
ScreenGui.Parent = game.CoreGui
ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0.5, -(303 / 2), 0.5, -(263 / 2))
ImageLabel.Rotation = 0
ImageLabel.Size = UDim2.new(0, 303,0, 263)
ImageLabel.Image = "rbxassetid://6587457747"
ImageLabel.ImageTransparency = 1
 
for i = 1, 50, 2 do
    blur.Size = i
    ImageLabel.ImageTransparency = ImageLabel.ImageTransparency - 0.1
    wait()
end
wait(0.1)
 
for i = 1, 50, 2 do
    blur.Size = 50 - i
    ImageLabel.ImageTransparency = ImageLabel.ImageTransparency + 0.1
    wait()
end
blur:Destroy()
ScreenGui:Destroy()
game:GetService('RunService').Stepped:connect(function()
if game:GetService("Workspace"):FindFirstChild('VIPGate') then
game:GetService("Workspace").VIPGate:remove()
end end)
game:GetService('RunService').Stepped:connect(function()
if game:GetService("ReplicatedFirst")["CC_Lookout"]:FindFirstChild('ClientLog') then
game:GetService("ReplicatedFirst")["CC_Lookout"].ClientLog:remove()
end end)
game:GetService("ReplicatedStorage").Events.PetAction:InvokeServer("EquipBest")
game:GetService("Players").LocalPlayer.HidePopups.Value = true
game:GetService("Players").LocalPlayer.ShowOthersPets.Value = false
game:GetService("Players").LocalPlayer.MuteSound.Value = true
local Lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/IMRETARDED'))()
local CategoryVariableHere= Lib:Category("Tapping gods?")
CategoryVariableHere:Toggle("Auto Tap",function(State)
deku1 = State
while deku1 do wait()
game:GetService("ReplicatedStorage").Events.Tap:FireServer()
end end)
CategoryVariableHere:Toggle("Auto Boss",function(State)
deku2 = State
while deku2 do wait()
game:GetService("ReplicatedStorage").BossStuff.Yes:InvokeServer("Starter")
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(290.463593, 105.640602, -742.156494)
end end)
CategoryVariableHere:Toggle("Auto Boss 2",function(State)
dekul22 = State
while dekul22 do wait()
game:GetService("ReplicatedStorage").BossStuff.Yes:InvokeServer("Circus")
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-892.406128, 768.024292, 15.2982092)
end end)
CategoryVariableHere:Toggle("Auto Boss 3",function(State)
dekul22 = State
while dekul22 do wait()
game:GetService("ReplicatedStorage").BossStuff.Yes:InvokeServer("Dino")
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1213.97644, 1535.51733, -1712.4281)
end end)
CategoryVariableHere:Toggle("Auto Dimonds",function(State)
deku3 = State
while deku3 do wait()
for _,v in pairs(game:GetService("Workspace").CSpawn:GetDescendants()) do
if v:IsA("TouchTransmitter") then
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
wait()
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
end
end
end
end)

CategoryVariableHere:Button("EquipBest pet",function() 
local args = {
    [1] = "EquipBest"
}

game:GetService("ReplicatedStorage").Events.PetAction:InvokeServer(unpack(args))
end)
CategoryVariableHere:Toggle("Craft all pets",function(State)
deku33 = State
while deku33 do wait()
local args = {
    [1] = "CraftAll"
}
game:GetService("ReplicatedStorage").Events.PetAction:InvokeServer(unpack(args))
end end)
CategoryVariableHere:Toggle("Auto Upgrades",function(State)
deku4 = State
while deku4 do wait()
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Extra Speed")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Faster Hatching")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Extra Gems")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Pets Equipped")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Pet Storage")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Jump Boost")
game:GetService("ReplicatedStorage").Events.UpgradeAction:InvokeServer("Auto Tapper")
end end)
local CategoryVariableHere= Lib:Category("Autobuy eggs")
CategoryVariableHere:Toggle("Starter Egg",function(State)
dek1 = State
game:GetService('RunService').Stepped:connect(function()
if dek1 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(152.566956, 99.1522217, -720.399597)
local args = {
    [1] = "Starter Egg",
    [5] = {
        ["Legendary"] = false,
        ["Secret"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Godly"] = false,
        ["Uncommon"] = false,
        ["Rare"] = false
    }
}
game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end  end) end)
CategoryVariableHere:Toggle("Spiky Egg",function(State)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(164.880936, 99.1522217, -719.580505)
dek2 = State
game:GetService('RunService').Stepped:connect(function()
if dek2 then
local args = {
    [1] = "Spiky Egg",
    [5] = {
        ["Legendary"] = false,
        ["Secret"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Godly"] = false,
        ["Uncommon"] = false,
        ["Rare"] = false
    }
}
game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle("Elemental Egg",function(State)
dek3 = State
game:GetService('RunService').Stepped:connect(function()
if dek3 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(178.958817, 99.1522446, -717.718018)
local args = {
    [1] = "Elemental Egg",
    [5] = {
        ["Legendary"] = false,
        ["Secret"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Godly"] = false,
        ["Uncommon"] = false,
        ["Rare"] = false
    }
}
game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Anime Egg",function(State)
dek4 = State
game:GetService('RunService').Stepped:connect(function()
if dek4 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(193.705399, 99.4362946, -717.714722)
local args = {
    [1] = "Anime Egg",
    [5] = {
        ["Legendary"] = false,
        ["Secret"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Godly"] = false,
        ["Uncommon"] = false,
        ["Rare"] = false
    }
}
game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)

CategoryVariableHere:Toggle( "Carnival Egg",function(State)
dek6 = State
game:GetService('RunService').Stepped:connect(function()
if dek6 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-713.347412, 587.462341, -553.939453)
local args = {
    [1] = "Carnival Egg",
    [5] = {
        ["Legendary"] = false,
        ["Secret"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Godly"] = false,
        ["Uncommon"] = false,
        ["Rare"] = false
    }
}
game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Circus Egg",function(State)
dek7 = State
game:GetService('RunService').Stepped:connect(function()
if dek7 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-712.620667, 587.909302, -565.244568)
local args = {
    [1] = "Circus Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Plushie Egg",function(State)
dek8 = State
game:GetService('RunService').Stepped:connect(function()
if dek8 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-710.360901, 587.51239, -578.160217)
local args = {
    [1] = "Plushie Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)

CategoryVariableHere:Toggle( "Jurassic Egg",function(State)
dek9 = State
game:GetService('RunService').Stepped:connect(function()
if dek9 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-595.456055, 1310.47351, -1663.6571)
local args = {
    [1] = "Jurassic Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Fossil Egg",function(State)
dek10 = State
game:GetService('RunService').Stepped:connect(function()
if dek10 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-589.635864, 1310.45837, -1657.44214)
local args = {
    [1] = "Fossil Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Rainbow Dino Egg",function(State)
dek11 = State
game:GetService('RunService').Stepped:connect(function()
if dek11 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-580.535583, 1310.43164, -1648.02368)
local args = {
    [1] = "Rainbow Dino Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Youtuber Egg",function(State)
dek12 = State
game:GetService('RunService').Stepped:connect(function()
if dek12 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(120.390907, 99.4363098, -671.5755)
local args = {
    [1] = "Youtuber Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
CategoryVariableHere:Toggle( "Medieval Egg",function(State)
dek13 = State
game:GetService('RunService').Stepped:connect(function()
if dek13 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(187.592651, 2151.35693, -2517.52539)
local args = {
    [1] = "Medieval Egg",
    [5] = {
        ["Legendary"] = false,
        ["Godly"] = false,
        ["Common"] = false,
        ["Epic"] = false,
        ["Rare"] = false,
        ["Uncommon"] = false,
        ["Secret"] = false
    }
}

game:GetService("ReplicatedStorage").Events.OpenEgg:FireServer(unpack(args))
end end) end)
local CategoryVariableHere= Lib:Category("Music")
CategoryVariableHere:Slider("WalkSpeed",16,16,100,function(Val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Val end)
CategoryVariableHere:Slider("JumpPower",16,16,100,function(Val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = Val end)
CategoryVariableHere:Button("BTools",function() 
game.StarterGui:SetCoreGuiEnabled(2, true)
a = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
a.BinType = 2
b = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
b.BinType = 3
c = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
c.BinType = 4 end)
CategoryVariableHere:Button("G NoClip",function() 
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "g" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end) end)
CategoryVariableHere:Button("B Fly",function()
local gogo1000 = 0
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'b' then
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
gogo1000 = gogo1000 + 1
_G.FLYING = false
local T = LP.Character.UpperTorso
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local function FLY()
_G.FLYING = true
local BG = Instance.new('BodyGyro', T)
local BV = Instance.new('BodyVelocity', T)
BG.P = 9e4
BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BG.cframe = T.CFrame
BV.velocity = Vector3.new(0, 0.1, 0)
BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat wait()
LP.Character.Humanoid.PlatformStand = true
if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
SPEED = 50
elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0.1, 0)
end
BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not _G.FLYING
CONTROL = {F = 0, B = 0, L = 0, R = 0}
lCONTROL = {F = 0, B = 0, L = 0, R = 0}
SPEED = 0
BG:destroy()
BV:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 1
elseif KEY:lower() == 's' then
CONTROL.B = -1
elseif KEY:lower() == 'a' then
CONTROL.L = -1 
elseif KEY:lower() == 'd' then 
CONTROL.R = 1
end
end)
MOUSE.KeyUp:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 0
elseif KEY:lower() == 's' then
CONTROL.B = 0
elseif KEY:lower() == 'a' then
CONTROL.L = 0
elseif KEY:lower() == 'd' then
CONTROL.R = 0
end
end)
FLY()
if gogo1000 == 2 then
_G.FLYING = false
gogo1000 = 0
end
end
end) end)

CategoryVariableHere:Button("teleport to Random Player",function()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z)) end)
CategoryVariableHere:Button("Lag Switch F3",function()
local a = false
local b = settings()

game:service'UserInputService'.InputEnded:connect(function(i)
if i.KeyCode == Enum.KeyCode.F3 then
a = not a
b.Network.IncomingReplicationLag = a and 10 or 0
end
end) end) 
CategoryVariableHere:Button("ServerHop",function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)



local CategoryVariableHere= Lib:Category("Auto rebirth options")
CategoryVariableHere:Toggle("Auto Rebirth 1",function(State)
deku5 = State
while deku5 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(1)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 5",function(State)
deku6 = State
while deku6 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(5)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 10",function(State)
deku7 = State
while deku7 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(10)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 50",function(State)
deku8 = State
while deku8 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(50)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 100",function(State)
deku9 = State
while deku9 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(100)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 250",function(State)
deku10 = State
while deku10 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(250)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 500",function(State)
deku11 = State
while deku11 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(500)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 1k",function(State)
deku12 = State
while deku12 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(1000)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 5k",function(State)
deku13 = State
while deku13 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(5000)
end end)
CategoryVariableHere:Toggle("Auto Rebirth 10k",function(State)
deku14 = State
while deku14 do wait()
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(10000)
end end)
local CategoryVariableHere= Lib:Category("Credits")
CategoryVariableHere:Label("Credits to a r q for ui liba")
CategoryVariableHere:Label("Credits to DekuDimz#7960 aka me lol")
Lib:Reload()
game.StarterGui:SetCore("SendNotification", {
Title = "Warning";
Text = "RightShift to toggle";
})
game.StarterGui:SetCore("SendNotification", {
Title = "Credis";
Text = "CharWar Serverhops Toxic Mods screen thingy";
})
