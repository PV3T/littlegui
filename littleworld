local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
game:GetService("ReplicatedStorage").Remotes.Settings:FireServer("Auto-Equip Next Bug",false)
game:GetService("ReplicatedStorage").Remotes.Equip:FireServer("Bug","1")
local Lib = loadstring(game:HttpGet("https://pastebin.com/raw/GaRF4FDA"))()
local CategoryVariableHere = Lib:Category("Little world")
CategoryVariableHere:Toggle("Dummy farm",function(State) 
wiggle = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TownEXPSources.CaveTownDummy.DummyHitbox.CFrame
game:GetService("ReplicatedStorage").Remotes.Attack:FireServer(workspace.TownEXPSources.CaveTownDummy.DummyHitbox)

end end) end) end)
CategoryVariableHere:Button("Remove Useless stuff",function()
game:GetService("Workspace").Map:remove()
end)
CategoryVariableHere:Button("HideName",function()
local player = game.Players.LocalPlayer
player.Character.HumanoidRootPart.CustomName:remove()
game.Players.LocalPlayer.CharacterAdded:Connect(function()
local player = game.Players.LocalPlayer
player.Character.HumanoidRootPart.CustomName:remove() end) end)
CategoryVariableHere:Toggle("Hold Flag",function(State) 
wiggle1 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle1 then
for _,v in pairs(game:GetService("Workspace").Flags:GetDescendants()) do
if v:IsA("TouchTransmitter") then
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
end
end end end) end) end)
CategoryVariableHere:Toggle("Grab Fruit Possible kick",function(State) 
wiggle2 = State
while wiggle2 do
pcall(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game:GetService("Workspace").FoodObjects.Blueberry.CFrame
            wait(4)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game:GetService("Workspace").FoodObjects.Cherry.CFrame
            wait(4)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game:GetService("Workspace").FoodObjects.Cherry.CFrame
            wait(4) end)
end end)
CategoryVariableHere:Toggle("Go to common chest",function(State)
wiggle3 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle3 then   
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =
game:GetService("Workspace").Chests.Common.ChestHitbox.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Chests.Common.ChestHitbox) end end) end) end)

CategoryVariableHere:Toggle("Go to Epic chest",function(State)
wiggle4 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle4 then
if game:GetService("Workspace").Chests.Epic.ChestHitbox then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =
game:GetService("Workspace").Chests.Epic.ChestHitbox.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Chests.Epic.ChestHitbox)
end  end end)  end) end)



CategoryVariableHere:Toggle("Go to Legendary chest",function(State)
wiggle6 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle6 then
if game:GetService("Workspace").Chests.Legendary.ChestHitbox then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =
game:GetService("Workspace").Chests.Legendary.ChestHitbox.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Chests.Legendary.ChestHitbox)
end  end end)  end) end)

CategoryVariableHere:Toggle("Autofarm Frog",function(State)
wiggle7 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle7 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
if game:GetService("Workspace").Bosses.Bosses.Frog.Frog then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =
game:GetService("Workspace").Bosses.Bosses.Frog.Frog.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Bosses.Bosses.Frog.Frog)
end  end end) end) end)

CategoryVariableHere:Toggle("Autofarm Rat",function(State)
wiggle8 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle8 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
if game:GetService("Workspace").Bosses.Bosses.Rat.Rat then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Bosses.Bosses.Rat.Rat.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Bosses.Bosses.Rat.Rat)
end  end end) end) end)
CategoryVariableHere:Toggle("Autofarm Spider",function(State)
wiggle9 = State
game:GetService('RunService').RenderStepped:connect(function()
pcall(function()
if wiggle9 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
if game:GetService("Workspace").Bosses.Bosses.Spider.HumanoidRootPart then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Bosses.Bosses.Spider.HumanoidRootPart.CFrame
game.ReplicatedStorage.Remotes.Attack:FireServer(game:GetService("Workspace").Bosses.Bosses.Spider.BossHitbox)
end  end end) end) end)

CategoryVariableHere:Button("Lag Switch F3",function()
local a = false
local b = settings()

game:service'UserInputService'.InputEnded:connect(function(i)
if i.KeyCode == Enum.KeyCode.F3 then
a = not a
b.Network.IncomingReplicationLag = a and 10 or 0
end
end) end) 
CategoryVariableHere:Button("ServerHop",function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)

CategoryVariableHere:Button("Rejoin",function()
    local ts = game:GetService("TeleportService")
local p = game:GetService("Players").LocalPlayer
ts:Teleport(game.PlaceId, p) end)
local CategoryVariableHere= Lib:Category("Credits and info")
CategoryVariableHere:Label("Credits to a r q for ui liba")
CategoryVariableHere:Label("Credits to DekuDimz#7960 aka me lol")
Lib:Reload()


game.StarterGui:SetCore("SendNotification", {
			Title = "Credits",
			Text = "CharWar severhops",
		})
